{"ast":null,"code":"var _jsxFileName = \"d:\\\\TodoList\\\\TodoList\\\\Frontend\\\\client\\\\src\\\\components\\\\ListTasks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { MDBTable, MDBTableHead, MDBTableBody, MDBBtn } from 'mdb-react-ui-kit';\nimport EditTask from \"./EditTask\";\nimport InputTask from \"./InputTask\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ListTasks = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8000/tasks\");\n      const data = await response.json();\n      setTasks(data);\n      setLoading(false);\n    } catch (err) {\n      console.log(\"Error fetching tasks:\", err);\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const handleDelete = async id => {\n    try {\n      const response = await fetch(`http://localhost:8000/delete/${id}`, {\n        method: \"DELETE\"\n      });\n      if (response.ok) {\n        setTasks(tasks.filter(task => task.task_id !== id));\n      } else {\n        console.log(\"Failed to delete task, status:\", response.status);\n      }\n    } catch (err) {\n      console.log(\"Error during delete:\", err);\n    }\n  };\n\n  // Callback to handle the addition of a new task\n  const handleTaskAdded = newTask => {\n    setTasks(prevTasks => [...prevTasks, newTask]);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading tasks...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InputTask, {\n      onTaskAdded: handleTaskAdded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBTable, {\n      align: \"middle\",\n      className: \"mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(MDBTableHead, {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBTableBody, {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(EditTask, {\n              task: task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n              color: \"danger\",\n              onClick: () => handleDelete(task.task_id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, task.task_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ListTasks, \"suOgpW3t2nMZzUgwyaGqSRlDRtE=\");\n_c = ListTasks;\nexport default ListTasks;\nvar _c;\n$RefreshReg$(_c, \"ListTasks\");","map":{"version":3,"names":["React","useEffect","useState","MDBTable","MDBTableHead","MDBTableBody","MDBBtn","EditTask","InputTask","jsxDEV","_jsxDEV","Fragment","_Fragment","ListTasks","_s","tasks","setTasks","loading","setLoading","fetchTasks","response","fetch","data","json","err","console","log","handleDelete","id","method","ok","filter","task","task_id","status","handleTaskAdded","newTask","prevTasks","children","fileName","_jsxFileName","lineNumber","columnNumber","onTaskAdded","align","className","scope","map","description","color","onClick","_c","$RefreshReg$"],"sources":["d:/TodoList/TodoList/Frontend/client/src/components/ListTasks.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { MDBTable, MDBTableHead, MDBTableBody, MDBBtn } from 'mdb-react-ui-kit';\r\nimport EditTask from \"./EditTask\";\r\nimport InputTask from \"./InputTask\";\r\n\r\nconst ListTasks = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:8000/tasks\");\r\n      const data = await response.json();\r\n      setTasks(data);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.log(\"Error fetching tasks:\", err);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8000/delete/${id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n\r\n      if (response.ok) {\r\n        setTasks(tasks.filter((task) => task.task_id !== id));\r\n      } else {\r\n        console.log(\"Failed to delete task, status:\", response.status);\r\n      }\r\n    } catch (err) {\r\n      console.log(\"Error during delete:\", err);\r\n    }\r\n  };\r\n\r\n  // Callback to handle the addition of a new task\r\n  const handleTaskAdded = (newTask) => {\r\n    setTasks((prevTasks) => [...prevTasks, newTask]);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading tasks...</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <InputTask onTaskAdded={handleTaskAdded} />\r\n      <MDBTable align=\"middle\" className=\"mt-5\">\r\n        <MDBTableHead>\r\n          <tr>\r\n            <th scope=\"col\">Description</th>\r\n            <th scope=\"col\">Edit</th>\r\n            <th scope=\"col\">Delete</th>\r\n          </tr>\r\n        </MDBTableHead>\r\n        <MDBTableBody>\r\n          {tasks.map((task) => (\r\n            <tr key={task.task_id}>\r\n              <td>{task.description}</td>\r\n              <td>\r\n                <EditTask task={task} />\r\n              </td>\r\n              <td>\r\n                <MDBBtn\r\n                  color=\"danger\"\r\n                  onClick={() => handleDelete(task.task_id)}\r\n                >\r\n                  Delete\r\n                </MDBBtn>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </MDBTableBody>\r\n      </MDBTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListTasks;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}